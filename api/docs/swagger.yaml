basePath: /v1
definitions:
  models.CreateNoteRequest:
    properties:
      description:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.CreateUserRequest:
    properties:
      email:
        maxLength: 100
        minLength: 15
        type: string
      first_name:
        maxLength: 50
        minLength: 2
        type: string
      image_url:
        type: string
      last_name:
        maxLength: 50
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      phone_number:
        maxLength: 20
        minLength: 9
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  models.GetUserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image_url:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.ResponseError:
    properties:
      error:
        type: string
    type: object
  models.ResponseOK:
    properties:
      message:
        type: string
    type: object
host: localhost:8001
info:
  contact: {}
  description: Note app desc
  title: TodoApp
  version: 1.2.3
paths:
  /note:
    post:
      consumes:
      - application/json
      description: create Note
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Creat Note
      tags:
      - Notes
  /user:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Creat User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Getting user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a userss
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
